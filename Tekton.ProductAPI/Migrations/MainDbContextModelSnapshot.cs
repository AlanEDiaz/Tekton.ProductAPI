// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tekton.ProductAPI.Infrastructure.Database;

namespace Tekton.ProductAPI.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Tekton.ProductAPI.Domain.Entities.CommandStore", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("CommandStore");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreatedAt = new DateTime(2024, 2, 19, 23, 11, 30, 496, DateTimeKind.Local).AddTicks(3191),
                            Data = "test",
                            ProductId = new Guid("f69eb360-b6a2-450f-97ce-c8914e028bfe"),
                            Type = "Create"
                        },
                        new
                        {
                            id = 2,
                            CreatedAt = new DateTime(2024, 2, 19, 23, 11, 30, 496, DateTimeKind.Local).AddTicks(3518),
                            Data = "test",
                            ProductId = new Guid("431be9fe-9063-40d6-9d21-be654bd7613f"),
                            Type = "Update"
                        });
                });

            modelBuilder.Entity("Tekton.ProductAPI.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("f31cc5fa-bcd7-462e-92c5-10e0f78d246a"),
                            CreatedOn = new DateTime(2024, 2, 19, 23, 11, 30, 493, DateTimeKind.Local).AddTicks(8381),
                            Description = "test product1",
                            Discount = 0m,
                            Name = "ProductSeed1",
                            Price = 234m,
                            Stock = 12
                        },
                        new
                        {
                            ProductId = new Guid("afdf6038-3d39-443f-9ec5-6378dc5dac45"),
                            CreatedOn = new DateTime(2024, 2, 19, 23, 11, 30, 494, DateTimeKind.Local).AddTicks(8718),
                            Description = "test product2",
                            Discount = 0m,
                            Name = "ProductSeed2",
                            Price = 23m,
                            Stock = 14
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
